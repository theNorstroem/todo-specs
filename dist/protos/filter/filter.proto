// Code generated by furo-proto-gen. DO NOT EDIT.
syntax = "proto3";
package filter;
option go_package = "github.com/theNorstroem/todo-specs/dist/pb/filter;filterpb";
option java_multiple_files = true;
option java_outer_classname = "FilterProto";
option java_package = "com.furo.basefilter";



// Filter condition
message Condition {  

    // Field
    string fld = 1;

    // The comparator like gt, eq,...
    string is = 2;

    // The value as string, parse this for your field
    string val = 3;

    // And bracket with ors inside
    repeated filter.Condition aoc = 4;
}

// Filter root object
message Filter {  

    // Root bracket with ors inside, this is the most complex but most flexible way to define a filter
    repeated filter.Condition clause = 1;

    // Shortcut to set filter conditions without nesting.
// It is up to you how the server handles the request.
// Examples for a flat filter a,b,c:
// - all active conditions *must* match (a && b && c).
// - all conditions are handled as or (a || b || c).
// - you build your own logic like (a && b) || c.
    map<string,filter.Condition> flat = 2;
}